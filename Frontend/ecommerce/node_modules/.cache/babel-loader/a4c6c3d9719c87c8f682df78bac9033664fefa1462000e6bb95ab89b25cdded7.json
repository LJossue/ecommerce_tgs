{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      newUser: {\n        username: \"\",\n        password: \"\",\n        email: \"\"\n      },\n      selectedRoles: [],\n      roles: [],\n      // Lista de roles disponibles\n      users: [] // Lista de usuarios\n    };\n  },\n  created() {\n    this.fetchRoles();\n    this.fetchUsers();\n  },\n  methods: {\n    async fetchRoles() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/roles\");\n        this.roles = response.data;\n      } catch (error) {\n        console.error(\"Error fetching roles:\", error);\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/users\");\n        this.users = response.data;\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n    async createUser() {\n      try {\n        const response = await axios.post(\"http://localhost:8080/users\", {\n          ...this.newUser,\n          roles: this.selectedRoles\n        });\n        this.users.push(response.data);\n        this.newUser = {\n          username: \"\",\n          password: \"\",\n          email: \"\"\n        };\n        this.selectedRoles = [];\n      } catch (error) {\n        console.error(\"Error creating user:\", error);\n      }\n    },\n    async deleteUser(userId) {\n      try {\n        await axios.delete(`http://localhost:8080/users/${userId}`);\n        this.users = this.users.filter(user => user.id !== userId);\n      } catch (error) {\n        console.error(\"Error deleting user:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newUser","username","password","email","selectedRoles","roles","users","created","fetchRoles","fetchUsers","methods","response","get","error","console","createUser","post","push","deleteUser","userId","delete","filter","user","id"],"sources":["C:\\Users\\leand\\Downloads\\ecommerce\\ecommerce\\src\\components\\UsersManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-management\">\r\n    <h1>User Management</h1>\r\n    <!-- Formulario para crear un nuevo usuario -->\r\n    <form @submit.prevent=\"createUser\">\r\n      <h2>Create User</h2>\r\n      <label>Username:</label>\r\n      <input type=\"text\" v-model=\"newUser.username\" required />\r\n      <label>Password:</label>\r\n      <input type=\"password\" v-model=\"newUser.password\" required />\r\n      <label>Email:</label>\r\n      <input type=\"email\" v-model=\"newUser.email\" required />\r\n      <label>Roles:</label>\r\n      <select v-model=\"selectedRoles\" multiple>\r\n        <option v-for=\"role in roles\" :key=\"role.id\" :value=\"role.name\">\r\n          {{ role.name }}\r\n        </option>\r\n      </select>\r\n      <button type=\"submit\">Create</button>\r\n    </form>\r\n    <!-- Lista de usuarios -->\r\n    <div class=\"user-list\">\r\n      <h2>User List</h2>\r\n      <ul>\r\n        <li v-for=\"user in users\" :key=\"user.id\">\r\n          <span>{{ user.username }}</span>\r\n          <button @click=\"deleteUser(user.id)\">Delete</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newUser: {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n      },\r\n      selectedRoles: [],\r\n      roles: [], // Lista de roles disponibles\r\n      users: [], // Lista de usuarios\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchRoles();\r\n    this.fetchUsers();\r\n  },\r\n  methods: {\r\n    async fetchRoles() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/roles\");\r\n        this.roles = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching roles:\", error);\r\n      }\r\n    },\r\n    async fetchUsers() {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/users\");\r\n        this.users = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n      }\r\n    },\r\n    async createUser() {\r\n      try {\r\n        const response = await axios.post(\"http://localhost:8080/users\", {\r\n          ...this.newUser,\r\n          roles: this.selectedRoles,\r\n        });\r\n        this.users.push(response.data);\r\n        this.newUser = {\r\n          username: \"\",\r\n          password: \"\",\r\n          email: \"\",\r\n        };\r\n        this.selectedRoles = [];\r\n      } catch (error) {\r\n        console.error(\"Error creating user:\", error);\r\n      }\r\n    },\r\n    async deleteUser(userId) {\r\n      try {\r\n        await axios.delete(`http://localhost:8080/users/${userId}`);\r\n        this.users = this.users.filter((user) => user.id !== userId);\r\n      } catch (error) {\r\n        console.error(\"Error deleting user:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-management {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\nform {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nform label {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\nform input,\r\nform select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-bottom: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\nform button {\r\n  background-color: #333;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nform button:hover {\r\n  background-color: #03a044;\r\n}\r\n\r\n.user-list {\r\n  border-top: 1px solid #ccc;\r\n  padding-top: 20px;\r\n}\r\n\r\n.user-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.user-list li {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.user-list li span {\r\n  flex-grow: 1;\r\n}\r\n\r\n.user-list li button {\r\n  background-color: #d9534f;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  font-size: 12px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,aAAa,EAAE,EAAE;MACjBC,KAAK,EAAE,EAAE;MAAE;MACXC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;IACjB,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC;QAC/D,IAAI,CAACP,KAAI,GAAIM,QAAQ,CAACZ,IAAI;MAC5B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMJ,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC;QAC/D,IAAI,CAACN,KAAI,GAAIK,QAAQ,CAACZ,IAAI;MAC5B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMJ,QAAO,GAAI,MAAMb,KAAK,CAACkB,IAAI,CAAC,6BAA6B,EAAE;UAC/D,GAAG,IAAI,CAAChB,OAAO;UACfK,KAAK,EAAE,IAAI,CAACD;QACd,CAAC,CAAC;QACF,IAAI,CAACE,KAAK,CAACW,IAAI,CAACN,QAAQ,CAACZ,IAAI,CAAC;QAC9B,IAAI,CAACC,OAAM,GAAI;UACbC,QAAQ,EAAE,EAAE;UACZC,QAAQ,EAAE,EAAE;UACZC,KAAK,EAAE;QACT,CAAC;QACD,IAAI,CAACC,aAAY,GAAI,EAAE;MACzB,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACD,MAAMK,UAAUA,CAACC,MAAM,EAAE;MACvB,IAAI;QACF,MAAMrB,KAAK,CAACsB,MAAM,CAAC,+BAA+BD,MAAM,EAAE,CAAC;QAC3D,IAAI,CAACb,KAAI,GAAI,IAAI,CAACA,KAAK,CAACe,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAC,KAAMJ,MAAM,CAAC;MAC9D,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      products: [],\n      // Aquí almacenaremos la lista de productos obtenidos del backend\n      searchName: \"\",\n      // Criterio de búsqueda por nombre\n      searchMinPrice: null,\n      // Criterio de búsqueda por precio mínimo\n      searchMaxPrice: null // Criterio de búsqueda por precio máximo\n    };\n  },\n  created() {\n    // Hacer la solicitud GET para obtener la lista de productos\n    axios.get(\"http://localhost:8080/products\").then(response => {\n      // Almacenar la lista de productos en el estado del componente\n      this.products = response.data;\n    }).catch(error => {\n      console.error(\"Error al obtener la lista de productos:\", error);\n    });\n  },\n  computed: {\n    // Filtrar productos según los criterios de búsqueda\n    filteredProducts() {\n      return this.products.filter(product => {\n        let nameMatch = true;\n        let priceMatch = true;\n\n        // Filtrar por nombre si se ha ingresado un criterio de búsqueda\n        if (this.searchName) {\n          nameMatch = product.name.toLowerCase().includes(this.searchName.toLowerCase());\n        }\n\n        // Filtrar por precio mínimo si se ha ingresado un criterio de búsqueda\n        if (this.searchMinPrice !== null) {\n          priceMatch = product.price >= this.searchMinPrice;\n        }\n\n        // Filtrar por precio máximo si se ha ingresado un criterio de búsqueda\n        if (this.searchMaxPrice !== null) {\n          priceMatch = priceMatch && product.price <= this.searchMaxPrice;\n        }\n\n        // Retornar true solo si se cumplen todas las condiciones\n        return nameMatch && priceMatch;\n      });\n    }\n  },\n  methods: {\n    // Método para realizar la búsqueda de productos\n    searchProducts() {\n      // Realizar la solicitud de búsqueda al backend si es necesario\n      // Por ejemplo, si la búsqueda se realiza en el servidor\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","searchName","searchMinPrice","searchMaxPrice","created","get","then","response","catch","error","console","computed","filteredProducts","filter","product","nameMatch","priceMatch","name","toLowerCase","includes","price","methods","searchProducts"],"sources":["C:\\Users\\leand\\Downloads\\ecommerce\\ecommerce\\src\\components\\ListaProductos.vue"],"sourcesContent":["<template>\r\n  <div class=\"products-container\">\r\n    <h1>Lista de Productos</h1>\r\n    <!-- Agregar campos de entrada para los criterios de búsqueda -->\r\n    <div class=\"search-form\">\r\n      <input type=\"text\" placeholder=\"Buscar por nombre\" v-model=\"searchName\" />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Buscar por precio mínimo\"\r\n        v-model.number=\"searchMinPrice\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Buscar por precio máximo\"\r\n        v-model.number=\"searchMaxPrice\"\r\n      />\r\n      <button @click=\"searchProducts\">Buscar</button>\r\n    </div>\r\n    <div class=\"product-list\">\r\n      <!-- Filtrar y mostrar los productos según los criterios de búsqueda -->\r\n      <div\r\n        v-for=\"product in filteredProducts\"\r\n        :key=\"product.id\"\r\n        class=\"product-card\"\r\n      >\r\n        <!-- Resto del código del producto -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Aquí almacenaremos la lista de productos obtenidos del backend\r\n      searchName: \"\", // Criterio de búsqueda por nombre\r\n      searchMinPrice: null, // Criterio de búsqueda por precio mínimo\r\n      searchMaxPrice: null, // Criterio de búsqueda por precio máximo\r\n    };\r\n  },\r\n  created() {\r\n    // Hacer la solicitud GET para obtener la lista de productos\r\n    axios\r\n      .get(\"http://localhost:8080/products\")\r\n      .then((response) => {\r\n        // Almacenar la lista de productos en el estado del componente\r\n        this.products = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al obtener la lista de productos:\", error);\r\n      });\r\n  },\r\n  computed: {\r\n    // Filtrar productos según los criterios de búsqueda\r\n    filteredProducts() {\r\n      return this.products.filter((product) => {\r\n        let nameMatch = true;\r\n        let priceMatch = true;\r\n\r\n        // Filtrar por nombre si se ha ingresado un criterio de búsqueda\r\n        if (this.searchName) {\r\n          nameMatch = product.name\r\n            .toLowerCase()\r\n            .includes(this.searchName.toLowerCase());\r\n        }\r\n\r\n        // Filtrar por precio mínimo si se ha ingresado un criterio de búsqueda\r\n        if (this.searchMinPrice !== null) {\r\n          priceMatch = product.price >= this.searchMinPrice;\r\n        }\r\n\r\n        // Filtrar por precio máximo si se ha ingresado un criterio de búsqueda\r\n        if (this.searchMaxPrice !== null) {\r\n          priceMatch = priceMatch && product.price <= this.searchMaxPrice;\r\n        }\r\n\r\n        // Retornar true solo si se cumplen todas las condiciones\r\n        return nameMatch && priceMatch;\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    // Método para realizar la búsqueda de productos\r\n    searchProducts() {\r\n      // Realizar la solicitud de búsqueda al backend si es necesario\r\n      // Por ejemplo, si la búsqueda se realiza en el servidor\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos CSS específicos del componente */\r\n.products-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.product-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #c7c6c6;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n}\r\n.img-container {\r\n  width: 100%;\r\n  height: 200px; /* Altura del contenedor de la imagen */\r\n  overflow: hidden;\r\n}\r\n.product-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.product-details {\r\n  padding: 15px;\r\n}\r\n\r\n.product-name {\r\n  font-size: 18px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.product-description {\r\n  font-size: 14px;\r\n  color: #d3d3d3;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-price {\r\n  font-size: 16px;\r\n  color: #03a044;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.product-stock {\r\n  font-size: 14px;\r\n  color: #777;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-to-cart-button {\r\n  background-color: #333;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart-button:hover {\r\n  background-color: #03a044;\r\n}\r\n</style>\r\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,UAAU,EAAE,EAAE;MAAE;MAChBC,cAAc,EAAE,IAAI;MAAE;MACtBC,cAAc,EAAE,IAAI,CAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAN,KAAI,CACDO,GAAG,CAAC,gCAAgC,EACpCC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,IAAI,CAACP,QAAO,GAAIO,QAAQ,CAACR,IAAI;IAC/B,CAAC,EACAS,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN,CAAC;EACDE,QAAQ,EAAE;IACR;IACAC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACZ,QAAQ,CAACa,MAAM,CAAEC,OAAO,IAAK;QACvC,IAAIC,SAAQ,GAAI,IAAI;QACpB,IAAIC,UAAS,GAAI,IAAI;;QAErB;QACA,IAAI,IAAI,CAACf,UAAU,EAAE;UACnBc,SAAQ,GAAID,OAAO,CAACG,IAAG,CACpBC,WAAW,CAAC,EACZC,QAAQ,CAAC,IAAI,CAAClB,UAAU,CAACiB,WAAW,CAAC,CAAC,CAAC;QAC5C;;QAEA;QACA,IAAI,IAAI,CAAChB,cAAa,KAAM,IAAI,EAAE;UAChCc,UAAS,GAAIF,OAAO,CAACM,KAAI,IAAK,IAAI,CAAClB,cAAc;QACnD;;QAEA;QACA,IAAI,IAAI,CAACC,cAAa,KAAM,IAAI,EAAE;UAChCa,UAAS,GAAIA,UAAS,IAAKF,OAAO,CAACM,KAAI,IAAK,IAAI,CAACjB,cAAc;QACjE;;QAEA;QACA,OAAOY,SAAQ,IAAKC,UAAU;MAChC,CAAC,CAAC;IACJ;EACF,CAAC;EACDK,OAAO,EAAE;IACP;IACAC,cAAcA,CAAA,EAAG;MACf;MACA;IAAA;EAEJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      products: [],\n      // Lista de productos obtenidos del backend\n      searchQuery: \"\",\n      // Consulta de búsqueda del usuario\n      currentPage: 1,\n      // Página actual de la lista de productos\n      pageSize: 8,\n      // Tamaño de la página (máximo de productos por página)\n      cart: [] // Carrito de compras\n    };\n  },\n  created() {\n    // Obtener la lista completa de productos\n    axios.get(\"http://localhost:8080/products\").then(response => {\n      this.products = response.data;\n    }).catch(error => {\n      console.error(\"Error al obtener la lista de productos:\", error);\n    });\n  },\n  computed: {\n    // Filtrar los productos según la consulta de búsqueda\n    filteredProducts() {\n      return this.products.filter(product => product.name.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    // Calcular el número total de páginas basado en la lista completa de productos\n    totalPages() {\n      return Math.ceil(this.filteredProducts.length / this.pageSize);\n    },\n    // Obtener los productos para la página actual\n    currentPageProducts() {\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      return this.filteredProducts.slice(startIndex, startIndex + this.pageSize);\n    }\n  },\n  watch: {\n    // Observar cambios en la consulta de búsqueda y volver a la página 1\n    searchQuery() {\n      this.currentPage = 1;\n    }\n  },\n  methods: {\n    // Cambiar a la página anterior\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // Cambiar a la página siguiente\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    // Limpiar la consulta de búsqueda\n    clearSearch() {\n      this.searchQuery = \"\";\n    },\n    // Agregar un producto al carrito\n    addToCart(product) {\n      // Verificar si el producto ya está en el carrito\n      const existingProductIndex = this.cart.findIndex(item => item.id === product.id);\n      if (existingProductIndex !== -1) {\n        // Si el producto ya está en el carrito, aumentar la cantidad\n        this.cart[existingProductIndex].quantity++;\n      } else {\n        // Si el producto no está en el carrito, agregarlo\n        this.cart.push({\n          ...product,\n          quantity: 1\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","products","searchQuery","currentPage","pageSize","cart","created","get","then","response","catch","error","console","computed","filteredProducts","filter","product","name","toLowerCase","includes","totalPages","Math","ceil","length","currentPageProducts","startIndex","slice","watch","methods","previousPage","nextPage","clearSearch","addToCart","existingProductIndex","findIndex","item","id","quantity","push"],"sources":["C:\\Users\\leand\\Downloads\\ecommerce\\ecommerce\\src\\components\\ListaProductos.vue"],"sourcesContent":["<template>\r\n  <div class=\"products-container\" id=\"prd\">\r\n    <h1>Lista de Productos</h1>\r\n    <!-- Barra de búsqueda -->\r\n    <div class=\"search-container\">\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"searchQuery\"\r\n        placeholder=\"Buscar productos...\"\r\n        class=\"search-input\"\r\n      />\r\n      <button @click=\"clearSearch\" class=\"clear-button\">Limpiar</button>\r\n    </div>\r\n    <div class=\"product-list\">\r\n      <div\r\n        v-for=\"product in currentPageProducts\"\r\n        :key=\"product.id\"\r\n        class=\"product-card\"\r\n      >\r\n        <div class=\"img-container\">\r\n          <img :src=\"product.image\" alt=\"Product Image\" class=\"product-image\" />\r\n        </div>\r\n        <div class=\"product-details\">\r\n          <h2 class=\"product-name\">{{ product.name }}</h2>\r\n          <p class=\"product-description\">{{ product.description }}</p>\r\n          <p class=\"product-price\">$ {{ product.price }}</p>\r\n          <p class=\"product-stock\">Stock: {{ product.stock }}</p>\r\n          <button @click=\"addToCart(product)\" class=\"add-to-cart-button\">\r\n            Agregar al carrito\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Controles de paginación -->\r\n    <div class=\"pagination\">\r\n      <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\r\n        Anterior\r\n      </button>\r\n      <span>Página {{ currentPage }} de {{ totalPages }}</span>\r\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n        Siguiente\r\n      </button>\r\n    </div>\r\n    <div class=\"cart-container\">\r\n      <h2>Carrito de compras</h2>\r\n      <div v-if=\"cart.length === 0\">\r\n        <p>El carrito está vacío</p>\r\n      </div>\r\n      <div v-else>\r\n        <div v-for=\"(item, index) in cart\" :key=\"index\" class=\"cart-item\">\r\n          <div class=\"cart-item-details\">\r\n            <p>{{ item.name }}</p>\r\n            <p>Cantidad: {{ item.quantity }}</p>\r\n            <p>Precio unitario: ${{ item.price }}</p>\r\n            <p>Total: ${{ item.quantity * item.price }}</p>\r\n          </div>\r\n          <div class=\"cart-item-actions\">\r\n            <button @click=\"decreaseQuantity(index)\">-</button>\r\n            <button @click=\"increaseQuantity(index)\">+</button>\r\n            <button @click=\"removeFromCart(index)\">Eliminar</button>\r\n          </div>\r\n        </div>\r\n        <p>Total del carrito: ${{ totalCartPrice }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [], // Lista de productos obtenidos del backend\r\n      searchQuery: \"\", // Consulta de búsqueda del usuario\r\n      currentPage: 1, // Página actual de la lista de productos\r\n      pageSize: 8, // Tamaño de la página (máximo de productos por página)\r\n      cart: [], // Carrito de compras\r\n    };\r\n  },\r\n  created() {\r\n    // Obtener la lista completa de productos\r\n    axios\r\n      .get(\"http://localhost:8080/products\")\r\n      .then((response) => {\r\n        this.products = response.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error al obtener la lista de productos:\", error);\r\n      });\r\n  },\r\n  computed: {\r\n    // Filtrar los productos según la consulta de búsqueda\r\n    filteredProducts() {\r\n      return this.products.filter((product) =>\r\n        product.name.toLowerCase().includes(this.searchQuery.toLowerCase())\r\n      );\r\n    },\r\n    // Calcular el número total de páginas basado en la lista completa de productos\r\n    totalPages() {\r\n      return Math.ceil(this.filteredProducts.length / this.pageSize);\r\n    },\r\n    // Obtener los productos para la página actual\r\n    currentPageProducts() {\r\n      const startIndex = (this.currentPage - 1) * this.pageSize;\r\n      return this.filteredProducts.slice(\r\n        startIndex,\r\n        startIndex + this.pageSize\r\n      );\r\n    },\r\n  },\r\n  watch: {\r\n    // Observar cambios en la consulta de búsqueda y volver a la página 1\r\n    searchQuery() {\r\n      this.currentPage = 1;\r\n    },\r\n  },\r\n  methods: {\r\n    // Cambiar a la página anterior\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    // Cambiar a la página siguiente\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    // Limpiar la consulta de búsqueda\r\n    clearSearch() {\r\n      this.searchQuery = \"\";\r\n    },\r\n    // Agregar un producto al carrito\r\n    addToCart(product) {\r\n      // Verificar si el producto ya está en el carrito\r\n      const existingProductIndex = this.cart.findIndex(\r\n        (item) => item.id === product.id\r\n      );\r\n      if (existingProductIndex !== -1) {\r\n        // Si el producto ya está en el carrito, aumentar la cantidad\r\n        this.cart[existingProductIndex].quantity++;\r\n      } else {\r\n        // Si el producto no está en el carrito, agregarlo\r\n        this.cart.push({ ...product, quantity: 1 });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n/* Estilos para la barra de búsqueda */\r\n.search-container {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.search-input {\r\n  flex-grow: 1;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px 0 0 5px;\r\n}\r\n\r\n.clear-button {\r\n  background-color: #333;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  border-radius: 0 5px 5px 0;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.clear-button:hover {\r\n  background-color: #03a044;\r\n}\r\n/* Estilos CSS específicos del componente */\r\n.products-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.product-list {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  gap: 20px;\r\n}\r\n\r\n.product-card {\r\n  border: 1px solid #c7c6c6;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n}\r\n.img-container {\r\n  width: 100%;\r\n  height: 200px; /* Altura del contenedor de la imagen */\r\n  overflow: hidden;\r\n}\r\n.product-image {\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n}\r\n\r\n.product-details {\r\n  padding: 15px;\r\n}\r\n\r\n.product-name {\r\n  font-size: 18px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.product-description {\r\n  font-size: 14px;\r\n  color: #d3d3d3;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.product-price {\r\n  font-size: 16px;\r\n  color: #03a044;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.product-stock {\r\n  font-size: 14px;\r\n  color: #777;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.add-to-cart-button {\r\n  background-color: #333;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.add-to-cart-button:hover {\r\n  background-color: #03a044;\r\n}\r\n/* Estilos para la paginación */\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.pagination button {\r\n  background-color: #333;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 8px 15px;\r\n  font-size: 14px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin: 0 5px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n.pagination button:hover {\r\n  background-color: #03a044;\r\n}\r\n\r\n.pagination button:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n</style>\r\n"],"mappings":";AAqEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,WAAW,EAAE,EAAE;MAAE;MACjBC,WAAW,EAAE,CAAC;MAAE;MAChBC,QAAQ,EAAE,CAAC;MAAE;MACbC,IAAI,EAAE,EAAE,CAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAP,KAAI,CACDQ,GAAG,CAAC,gCAAgC,EACpCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACR,QAAO,GAAIQ,QAAQ,CAACT,IAAI;IAC/B,CAAC,EACAU,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE,CAAC,CAAC;EACN,CAAC;EACDE,QAAQ,EAAE;IACR;IACAC,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACb,QAAQ,CAACc,MAAM,CAAEC,OAAO,IAClCA,OAAO,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACjB,WAAW,CAACgB,WAAW,CAAC,CAAC,CACpE,CAAC;IACH,CAAC;IACD;IACAE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACR,gBAAgB,CAACS,MAAK,GAAI,IAAI,CAACnB,QAAQ,CAAC;IAChE,CAAC;IACD;IACAoB,mBAAmBA,CAAA,EAAG;MACpB,MAAMC,UAAS,GAAI,CAAC,IAAI,CAACtB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,QAAQ;MACzD,OAAO,IAAI,CAACU,gBAAgB,CAACY,KAAK,CAChCD,UAAU,EACVA,UAAS,GAAI,IAAI,CAACrB,QACpB,CAAC;IACH;EACF,CAAC;EACDuB,KAAK,EAAE;IACL;IACAzB,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,WAAU,GAAI,CAAC;IACtB;EACF,CAAC;EACDyB,OAAO,EAAE;IACP;IACAC,YAAYA,CAAA,EAAG;MACb,IAAI,IAAI,CAAC1B,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF,CAAC;IACD;IACA2B,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAC3B,WAAU,GAAI,IAAI,CAACiB,UAAU,EAAE;QACtC,IAAI,CAACjB,WAAW,EAAE;MACpB;IACF,CAAC;IACD;IACA4B,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC7B,WAAU,GAAI,EAAE;IACvB,CAAC;IACD;IACA8B,SAASA,CAAChB,OAAO,EAAE;MACjB;MACA,MAAMiB,oBAAmB,GAAI,IAAI,CAAC5B,IAAI,CAAC6B,SAAS,CAC7CC,IAAI,IAAKA,IAAI,CAACC,EAAC,KAAMpB,OAAO,CAACoB,EAChC,CAAC;MACD,IAAIH,oBAAmB,KAAM,CAAC,CAAC,EAAE;QAC/B;QACA,IAAI,CAAC5B,IAAI,CAAC4B,oBAAoB,CAAC,CAACI,QAAQ,EAAE;MAC5C,OAAO;QACL;QACA,IAAI,CAAChC,IAAI,CAACiC,IAAI,CAAC;UAAE,GAAGtB,OAAO;UAAEqB,QAAQ,EAAE;QAAE,CAAC,CAAC;MAC7C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}